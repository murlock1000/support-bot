# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import support_bot_pb2 as proto_dot_support__bot__pb2


class GreeterStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SayHello = channel.unary_unary(
                '/support_bot.Greeter/SayHello',
                request_serializer=proto_dot_support__bot__pb2.HelloRequest.SerializeToString,
                response_deserializer=proto_dot_support__bot__pb2.HelloReply.FromString,
                )
        self.SayHelloAgain = channel.unary_unary(
                '/support_bot.Greeter/SayHelloAgain',
                request_serializer=proto_dot_support__bot__pb2.HelloRequest.SerializeToString,
                response_deserializer=proto_dot_support__bot__pb2.HelloReply.FromString,
                )


class GreeterServicer(object):
    """The greeting service definition.
    """

    def SayHello(self, request, context):
        """Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SayHelloAgain(self, request, context):
        """Sends another greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SayHello': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHello,
                    request_deserializer=proto_dot_support__bot__pb2.HelloRequest.FromString,
                    response_serializer=proto_dot_support__bot__pb2.HelloReply.SerializeToString,
            ),
            'SayHelloAgain': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHelloAgain,
                    request_deserializer=proto_dot_support__bot__pb2.HelloRequest.FromString,
                    response_serializer=proto_dot_support__bot__pb2.HelloReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'support_bot.Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Greeter(object):
    """The greeting service definition.
    """

    @staticmethod
    def SayHello(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/support_bot.Greeter/SayHello',
            proto_dot_support__bot__pb2.HelloRequest.SerializeToString,
            proto_dot_support__bot__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SayHelloAgain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/support_bot.Greeter/SayHelloAgain',
            proto_dot_support__bot__pb2.HelloRequest.SerializeToString,
            proto_dot_support__bot__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MetaHandlerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FetchAvatarURL = channel.unary_unary(
                '/support_bot.MetaHandler/FetchAvatarURL',
                request_serializer=proto_dot_support__bot__pb2.AvatarURLRequest.SerializeToString,
                response_deserializer=proto_dot_support__bot__pb2.AvatarURLReply.FromString,
                )


class MetaHandlerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def FetchAvatarURL(self, request, context):
        """Fetch avatar mxc URL
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MetaHandlerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FetchAvatarURL': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchAvatarURL,
                    request_deserializer=proto_dot_support__bot__pb2.AvatarURLRequest.FromString,
                    response_serializer=proto_dot_support__bot__pb2.AvatarURLReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'support_bot.MetaHandler', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MetaHandler(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def FetchAvatarURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/support_bot.MetaHandler/FetchAvatarURL',
            proto_dot_support__bot__pb2.AvatarURLRequest.SerializeToString,
            proto_dot_support__bot__pb2.AvatarURLReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class CommandHandlerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RemoveStaffFromTicket = channel.unary_unary(
                '/support_bot.CommandHandler/RemoveStaffFromTicket',
                request_serializer=proto_dot_support__bot__pb2.UserWithTicketRequest.SerializeToString,
                response_deserializer=proto_dot_support__bot__pb2.EmptyResponse.FromString,
                )
        self.RemoveStaffFromChat = channel.unary_unary(
                '/support_bot.CommandHandler/RemoveStaffFromChat',
                request_serializer=proto_dot_support__bot__pb2.UserWithChatRequest.SerializeToString,
                response_deserializer=proto_dot_support__bot__pb2.EmptyResponse.FromString,
                )
        self.CloseTicket = channel.unary_unary(
                '/support_bot.CommandHandler/CloseTicket',
                request_serializer=proto_dot_support__bot__pb2.TicketRequest.SerializeToString,
                response_deserializer=proto_dot_support__bot__pb2.EmptyResponse.FromString,
                )
        self.CloseChat = channel.unary_unary(
                '/support_bot.CommandHandler/CloseChat',
                request_serializer=proto_dot_support__bot__pb2.ChatRequest.SerializeToString,
                response_deserializer=proto_dot_support__bot__pb2.EmptyResponse.FromString,
                )
        self.ClaimTicket = channel.unary_unary(
                '/support_bot.CommandHandler/ClaimTicket',
                request_serializer=proto_dot_support__bot__pb2.UserWithTicketRequest.SerializeToString,
                response_deserializer=proto_dot_support__bot__pb2.EmptyResponse.FromString,
                )
        self.ClaimForTicket = channel.unary_unary(
                '/support_bot.CommandHandler/ClaimForTicket',
                request_serializer=proto_dot_support__bot__pb2.UserWithTicketRequest.SerializeToString,
                response_deserializer=proto_dot_support__bot__pb2.EmptyResponse.FromString,
                )
        self.ClaimChat = channel.unary_unary(
                '/support_bot.CommandHandler/ClaimChat',
                request_serializer=proto_dot_support__bot__pb2.UserWithChatRequest.SerializeToString,
                response_deserializer=proto_dot_support__bot__pb2.EmptyResponse.FromString,
                )
        self.ClaimForChat = channel.unary_unary(
                '/support_bot.CommandHandler/ClaimForChat',
                request_serializer=proto_dot_support__bot__pb2.UserWithChatRequest.SerializeToString,
                response_deserializer=proto_dot_support__bot__pb2.EmptyResponse.FromString,
                )
        self.ReopenTicket = channel.unary_unary(
                '/support_bot.CommandHandler/ReopenTicket',
                request_serializer=proto_dot_support__bot__pb2.TicketRequest.SerializeToString,
                response_deserializer=proto_dot_support__bot__pb2.EmptyResponse.FromString,
                )
        self.DeleteTicketRoom = channel.unary_unary(
                '/support_bot.CommandHandler/DeleteTicketRoom',
                request_serializer=proto_dot_support__bot__pb2.TicketRequest.SerializeToString,
                response_deserializer=proto_dot_support__bot__pb2.EmptyResponse.FromString,
                )
        self.DeleteChatRoom = channel.unary_unary(
                '/support_bot.CommandHandler/DeleteChatRoom',
                request_serializer=proto_dot_support__bot__pb2.ChatRequest.SerializeToString,
                response_deserializer=proto_dot_support__bot__pb2.EmptyResponse.FromString,
                )


class CommandHandlerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RemoveStaffFromTicket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveStaffFromChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseTicket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimTicket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimForTicket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimForChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReopenTicket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTicketRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteChatRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CommandHandlerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RemoveStaffFromTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveStaffFromTicket,
                    request_deserializer=proto_dot_support__bot__pb2.UserWithTicketRequest.FromString,
                    response_serializer=proto_dot_support__bot__pb2.EmptyResponse.SerializeToString,
            ),
            'RemoveStaffFromChat': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveStaffFromChat,
                    request_deserializer=proto_dot_support__bot__pb2.UserWithChatRequest.FromString,
                    response_serializer=proto_dot_support__bot__pb2.EmptyResponse.SerializeToString,
            ),
            'CloseTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseTicket,
                    request_deserializer=proto_dot_support__bot__pb2.TicketRequest.FromString,
                    response_serializer=proto_dot_support__bot__pb2.EmptyResponse.SerializeToString,
            ),
            'CloseChat': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseChat,
                    request_deserializer=proto_dot_support__bot__pb2.ChatRequest.FromString,
                    response_serializer=proto_dot_support__bot__pb2.EmptyResponse.SerializeToString,
            ),
            'ClaimTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimTicket,
                    request_deserializer=proto_dot_support__bot__pb2.UserWithTicketRequest.FromString,
                    response_serializer=proto_dot_support__bot__pb2.EmptyResponse.SerializeToString,
            ),
            'ClaimForTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimForTicket,
                    request_deserializer=proto_dot_support__bot__pb2.UserWithTicketRequest.FromString,
                    response_serializer=proto_dot_support__bot__pb2.EmptyResponse.SerializeToString,
            ),
            'ClaimChat': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimChat,
                    request_deserializer=proto_dot_support__bot__pb2.UserWithChatRequest.FromString,
                    response_serializer=proto_dot_support__bot__pb2.EmptyResponse.SerializeToString,
            ),
            'ClaimForChat': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimForChat,
                    request_deserializer=proto_dot_support__bot__pb2.UserWithChatRequest.FromString,
                    response_serializer=proto_dot_support__bot__pb2.EmptyResponse.SerializeToString,
            ),
            'ReopenTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.ReopenTicket,
                    request_deserializer=proto_dot_support__bot__pb2.TicketRequest.FromString,
                    response_serializer=proto_dot_support__bot__pb2.EmptyResponse.SerializeToString,
            ),
            'DeleteTicketRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTicketRoom,
                    request_deserializer=proto_dot_support__bot__pb2.TicketRequest.FromString,
                    response_serializer=proto_dot_support__bot__pb2.EmptyResponse.SerializeToString,
            ),
            'DeleteChatRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteChatRoom,
                    request_deserializer=proto_dot_support__bot__pb2.ChatRequest.FromString,
                    response_serializer=proto_dot_support__bot__pb2.EmptyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'support_bot.CommandHandler', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CommandHandler(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RemoveStaffFromTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/support_bot.CommandHandler/RemoveStaffFromTicket',
            proto_dot_support__bot__pb2.UserWithTicketRequest.SerializeToString,
            proto_dot_support__bot__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveStaffFromChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/support_bot.CommandHandler/RemoveStaffFromChat',
            proto_dot_support__bot__pb2.UserWithChatRequest.SerializeToString,
            proto_dot_support__bot__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/support_bot.CommandHandler/CloseTicket',
            proto_dot_support__bot__pb2.TicketRequest.SerializeToString,
            proto_dot_support__bot__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/support_bot.CommandHandler/CloseChat',
            proto_dot_support__bot__pb2.ChatRequest.SerializeToString,
            proto_dot_support__bot__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/support_bot.CommandHandler/ClaimTicket',
            proto_dot_support__bot__pb2.UserWithTicketRequest.SerializeToString,
            proto_dot_support__bot__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimForTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/support_bot.CommandHandler/ClaimForTicket',
            proto_dot_support__bot__pb2.UserWithTicketRequest.SerializeToString,
            proto_dot_support__bot__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/support_bot.CommandHandler/ClaimChat',
            proto_dot_support__bot__pb2.UserWithChatRequest.SerializeToString,
            proto_dot_support__bot__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimForChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/support_bot.CommandHandler/ClaimForChat',
            proto_dot_support__bot__pb2.UserWithChatRequest.SerializeToString,
            proto_dot_support__bot__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReopenTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/support_bot.CommandHandler/ReopenTicket',
            proto_dot_support__bot__pb2.TicketRequest.SerializeToString,
            proto_dot_support__bot__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteTicketRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/support_bot.CommandHandler/DeleteTicketRoom',
            proto_dot_support__bot__pb2.TicketRequest.SerializeToString,
            proto_dot_support__bot__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteChatRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/support_bot.CommandHandler/DeleteChatRoom',
            proto_dot_support__bot__pb2.ChatRequest.SerializeToString,
            proto_dot_support__bot__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MessageHandlerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FetchTicketRoomMessages = channel.unary_unary(
                '/support_bot.MessageHandler/FetchTicketRoomMessages',
                request_serializer=proto_dot_support__bot__pb2.TicketMessagesRequest.SerializeToString,
                response_deserializer=proto_dot_support__bot__pb2.MessageResponse.FromString,
                )


class MessageHandlerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def FetchTicketRoomMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessageHandlerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FetchTicketRoomMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchTicketRoomMessages,
                    request_deserializer=proto_dot_support__bot__pb2.TicketMessagesRequest.FromString,
                    response_serializer=proto_dot_support__bot__pb2.MessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'support_bot.MessageHandler', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MessageHandler(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def FetchTicketRoomMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/support_bot.MessageHandler/FetchTicketRoomMessages',
            proto_dot_support__bot__pb2.TicketMessagesRequest.SerializeToString,
            proto_dot_support__bot__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
